# This patch is to fix popcnt-1.ispc tests for llvm 6.0 onwards.
# Without this patch, the machine scheduler incorrectly calculates
# dependencies between this load and other accesses.  In this case,
# there was a 32 byte vector store that was split into two 16 byte
# stores, one with offset 0 and one with offset 16. The size of the
# memory operand for both was 16. The scheduler correctly detected
# the alias with the offset 0 store, but not the offset 16 store.
Index: lib/CodeGen/SelectionDAG/DAGCombiner.cpp
===================================================================
--- lib/CodeGen/SelectionDAG/DAGCombiner.cpp
+++ lib/CodeGen/SelectionDAG/DAGCombiner.cpp
@@ -15640,11 +15640,17 @@
     Offset = DAG.getConstant(PtrOff, DL, PtrType);
     MPI = OriginalLoad->getPointerInfo().getWithOffset(PtrOff);
   } else {
+    // We can't preserve pointer info, so don't do this transform if the the
+    // access isn't in the default address space.
+    if (OriginalLoad->getPointerInfo().getAddrSpace() != 0)
+      return SDValue();
     Offset = DAG.getZExtOrTrunc(EltNo, DL, PtrType);
     Offset = DAG.getNode(
         ISD::MUL, DL, PtrType, Offset,
         DAG.getConstant(VecEltVT.getStoreSize(), DL, PtrType));
-    MPI = OriginalLoad->getPointerInfo();
+    // Discard the pointer info because the memory operand can't represent this
+    // new access since the offset is variable.
+    MPI = MachinePointerInfo();
   }
   NewPtr = DAG.getNode(ISD::ADD, DL, PtrType, NewPtr, Offset);
 

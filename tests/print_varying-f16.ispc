#include "../test_static.isph"
// rule: skip on arch=x86
// rule: skip on arch=x86-64
task void print_f(uniform float aFOO[]) {
    float16 a = aFOO[programIndex];
    float16 varFloatVal = a + 4.75f16;
    print("Test varying float: %\n", varFloatVal);
}

task void print_result() {
    assert(programCount <= 64);
    print("Test varying float: ");
    // varFloatVal
    print("[5.750000,6.750000,7.750000,8.750000");
    if (programCount > 4)
        print(",9.750000,10.750000,11.750000,12.750000");
    if (programCount > 8)
        print(",13.750000,14.750000,15.750000,16.750000"
              ",17.750000,18.750000,19.750000,20.750000");
    if (programCount > 16)
        print(",21.750000,22.750000,23.750000,24.750000"
              ",25.750000,26.750000,27.750000,28.750000"
              ",29.750000,30.750000,31.750000,32.750000"
              ",33.750000,34.750000,35.750000,36.750000");
    if (programCount > 32)
        print(",37.750000,38.750000,39.750000,40.750000"
              ",41.750000,42.750000,43.750000,44.750000"
              ",45.750000,46.750000,47.750000,48.750000"
              ",49.750000,50.750000,51.750000,52.750000"
              ",53.750000,54.750000,55.750000,56.750000"
              ",57.750000,58.750000,59.750000,60.750000"
              ",61.750000,62.750000,63.750000,64.750000"
              ",65.750000,66.750000,67.750000,68.750000");
    print("]\n");
}

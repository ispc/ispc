import os
from distutils.version import LooseVersion

import lit.formats

config.name = 'ispc'
config.suffixes = ['.ispc']

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(False)

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)

# test_exec_root: The root path where tests should be run.
ispc_test_exec_root = lit_config.params.get('ispc_test_exec_root','')
# LLVM version used to build ISPC
ispc_llvm_version_number = lit_config.params.get('ispc_llvm_version_number','')

if ispc_test_exec_root != '':
    config.test_exec_root = ispc_test_exec_root

config.substitutions.append(('%{ispc}', 'ispc'))
config.substitutions.append(('FileCheck', 'FileCheck'))

print("Config:")

# LLVM version
llvm_version = LooseVersion(ispc_llvm_version_number)
if llvm_version >= LooseVersion("10.0.0"):
    print("LLVM_10_0+: YES")
    config.available_features.add("LLVM_10_0+")
else:
    print("LLVM_10_0+: NO")

# x86 backend
x86_enabled = lit_config.params.get('x86_enabled')
if x86_enabled == "ON":
    print("X86_ENABLED: YES")
    config.available_features.add("X86_ENABLED")
elif x86_enabled == "OFF":
    print("X86_ENABLED: NO")
else:
    sys.exit("Cannot parse x86_enabled: " + x86_enabled)

# ARM backend
arm_enabled = lit_config.params.get('arm_enabled')
if arm_enabled == "ON":
    print("ARM_ENABLED: YES")
    config.available_features.add("ARM_ENABLED")
elif arm_enabled == "OFF":
    print("ARM_ENABLED: NO")
else:
    sys.exit("Cannot parse arm_enabled: " + arm_enabled)

# WebAssembly backend
wasm_enabled = lit_config.params.get('wasm_enabled')
if wasm_enabled == "ON":
    print("WASM_ENABLED: YES")
    config.available_features.add("WASM_ENABLED")
elif wasm_enabled == "OFF":
    print("WASM_ENABLED: NO")
else:
    sys.exit("Cannot parse wasm_enabled: " + wasm_enabled)

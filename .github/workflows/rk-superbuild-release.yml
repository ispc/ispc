
# Copyright 2024-2025 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

name: RK superbuild (release)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ISPC release version (just number without v, e.g., 1.24.0)'
        required: true
        type: string

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-cpu-ubuntu-2204:
    runs-on: ubuntu-latest
    # Disabling this workflow for non ispc/ispc repo as it needs to run on releases only.
    if: github.repository == 'ispc/ispc'
    container:
      image: ubuntu:22.04

    steps:
    - name: Install packages
      run: |
        echo "Installing build dependencies..."
        apt update
        apt upgrade -y
        apt install -y git wget tar build-essential cmake ninja-build libglfw3-dev libgl1-mesa-dev libxinerama-dev libxcursor-dev libxi-dev python3-dev

    - name: Clone RK superbuild repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        repository: RenderKit/superbuild

    - name: Download ISPC release archives
      env:
        LINK: https://github.com/ispc/ispc/releases/download/v${{ inputs.version }}/ispc-v${{ inputs.version }}-linux.tar.gz
        INPUTS_VERSION: ${{ inputs.version }}
      run: |
        echo "Download artifact ${LINK}" >> "$GITHUB_STEP_SUMMARY"
        wget "${LINK}"
        tar xf "ispc-v${INPUTS_VERSION}-linux.tar.gz"
      shell: bash

    - name: Build
      run: |
        mkdir build
        cd build
        cmake -DISPC_URL="${GITHUB_WORKSPACE}/ispc-v${INPUTS_VERSION}-linux.tar.gz" -DISPC_VERSION=${INPUTS_VERSION} ../
        cmake --build .
      env:
        INPUTS_VERSION: ${{ inputs.version }}

  build-ospray-superbuild-windows:
    runs-on: windows-2022
    # Disabling this workflow for non ispc/ispc repo as it needs to run on releases only.
    if: github.repository == 'ispc/ispc'
    steps:
    - name: Clone RK ospray repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        repository: ospray/ospray

    - name: Download ISPC release archives
      env:
        LINK: https://github.com/ispc/ispc/releases/download/v${{ inputs.version }}/ispc-v${{ inputs.version }}-windows.zip
      run: |
        Install-ChocoPackage wget
        echo "Download artifact $env:LINK >> $env:GITHUB_STEP_SUMMARY"
        wget -q $env:LINK

    - name: Add ISPC to the PATH
      run: |
        Expand-Archive $pwd\ispc-v$env:INPUTS_VERSION-windows.zip -DestinationPath $pwd
        echo "$pwd\ispc-v$env:INPUTS_VERSION-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      env:
        INPUTS_VERSION: ${{ inputs.version }}

    - name: Build ospray superbuild
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 ../scripts/superbuild -DDOWNLOAD_ISPC=OFF -DCMAKE_BUILD_TYPE=Release -DDEPENDENCIES_BUILD_TYPE=Release
        cmake --build . --config Release

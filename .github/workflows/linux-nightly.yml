# Nightly Linux run.

name: Linux tests / LLVM 10.0

# Run daily - test sse2-avx2 targets @ -O0/-O1/-O2
on:
  schedule:
    - cron:  '0 7 * * *'

env:
  LLVM_VERSION: "10.0"
  LLVM_REPO: https://github.com/dbabokin/llvm-project
  LLVM_TAR: llvm-10.0.0-ubuntu16.04-Release+Asserts-x86.arm.wasm.tar.xz
  # package name ispc_llvm10_linux

jobs:
  linux-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install bison flex libc6-dev-i386 g++-multilib lib32stdc++6 ncurses-dev
        wget $LLVM_REPO/releases/download/llvm-$LLVM_VERSION-ispc-dev/$LLVM_TAR
        tar xvf $LLVM_TAR 
        echo "::add-path::${GITHUB_WORKSPACE}/bin-$LLVM_VERSION/bin"

    - name: Check environment
      run: |
        ./check_env.py
        which -a clang
        cat /proc/cpuinfo

    - name: Build package
      run: |
        mkdir build && cd build
        cmake .. -DISPC_PREPARE_PACKAGE=ON -DISPC_INCLUDE_BENCHMARKS=ON
        make -j4 package

    - name: Sanity testing (make check-all, make test)
      run: |
        cd build
        bin/check_isa
        bin/ispc --support-matrix
        make check-all
        make ispc_benchmarks && make test

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: ispc_llvm10_linux
        path: build/ispc-trunk-linux.tar.gz

  test:
    continue-on-error: true
    strategy:
      matrix:
        target: [sse2-i32x4, sse2-i32x8,
                 sse4-i8x16, sse4-i16x8, sse4-i32x4, sse4-i32x8,
                 avx1-i32x4, avx1-i32x8, avx1-i32x16, avx1-i64x4,
                 avx2-i8x32, avx2-i16x16, avx2-i32x4, avx2-i32x8, avx2-i32x16, avx2-i64x4,
                 avx512knl-i32x16,
                 avx512skx-i32x8, avx512skx-i32x16, avx512skx-i8x64, avx512skx-i16x32]
    runs-on: ubuntu-latest
    needs: linux-build
    steps:
    - uses: actions/checkout@v2
    - name: Download package
      uses: actions/download-artifact@v2
      with:
        name: ispc_llvm10_linux
    - name: Install dependencies and unpack artifacts
      run: |
        sudo apt-get update && sudo apt-get install libc6-dev-i386 g++-multilib lib32stdc++6
        find /usr -name cdefs.h
        wget https://software.intel.com/content/dam/develop/external/us/en/protected/$SDE_TAR_NAME.tar.bz2
        tar xvf $SDE_TAR_NAME.tar.bz2
        echo "::add-path::${GITHUB_WORKSPACE}/$SDE_TAR_NAME"
        tar xvf ispc-trunk-linux.tar.gz
        echo "::add-path::${GITHUB_WORKSPACE}/ispc-trunk-linux/bin"
        echo "::set-env name=LLVM_HOME::${GITHUB_WORKSPACE}"
        echo "::set-env name=ISPC_HOME::${GITHUB_WORKSPACE}"
    - name: Running tests
      run: |
        ./alloy.py -r --only="stability current -O0 -O1 -O2" --only-targets="${{ matrix.target }}" --time --update-errors=FP
    - name: Upload fail_db.txt
      uses: actions/upload-artifact@v2
      with:
        name: fail_db.${{matrix.target}}.txt
        path: fail_db.txt

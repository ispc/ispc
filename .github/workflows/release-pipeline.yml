# Copyright 2025, Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

name: Release Pipeline

permissions: read-all

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'ISPC reference to checkout (SHA/tag/branch)'
        required: true
        type: string
        default: 'main'

jobs:
  define-params:
    runs-on: ubuntu-22.04
    outputs:
      ispc_version: ${{ steps.define.outputs.ispc_version }}
      docker_dir: ${{ steps.define.outputs.docker_dir }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          path: ispc
          ref: ${{ inputs.ref }}

      - name: Define ISPC version
        id: define
        run: |
          file_path="ispc/common/version.h"
          version_line=$(grep '#define ISPC_VERSION ' "$file_path")
          if [[ -n "$version_line" ]]; then
            # Extract the version number
            VERSION=$(echo "$version_line" | awk -F'"' '{print $2}')
            if [[ "$VERSION" == *"dev"* ]]; then
              echo "Version has a dev suffix, so it is a trunk archive"
              DOCKER_DIR="docker/ubuntu/18.04/cpu_ispc_build"
            else
              echo "Version does not have a dev suffix, so it is a release archive"
              DOCKER_DIR="docker/v${VERSION}/ubuntu18.04/"
            fi
          else
            echo "Version line not found in the file."
          fi
          echo "ispc_version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "ispc_version=${VERSION}" >> "$GITHUB_STEP_SUMMARY"
          echo "docker_dir=${DOCKER_DIR}" >> "$GITHUB_OUTPUT"
          echo "docker_dir=${DOCKER_DIR}" >> "$GITHUB_STEP_SUMMARY"


  aarch64:
    runs-on: ubuntu-22.04-arm
    needs: [define-params]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Build Docker image
        working-directory: ${{ needs.define-params.outputs.docker_dir }}
        run: |
          docker build --no-cache \
            --build-arg XE_DEPS=OFF \
            --build-arg LTO=ON \
            --build-arg SHA=${INPUTS_REF} \
            -t ispc-release .
        env:
          INPUTS_REF: ${{ inputs.ref }}

      - name: Extract tarball from container
        run: |
          CONTAINER_ID=$(docker create ispc-release)
          docker cp "$CONTAINER_ID":/usr/local/src/ ./

      - name: Upload artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ispc_aarch64
          path: src/ispc-*.tar.gz

  x86_64:
    runs-on: ubuntu-22.04
    needs: [define-params]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Build Docker image
        working-directory: ${{ needs.define-params.outputs.docker_dir }}
        run: |
          docker build --no-cache \
            --build-arg LTO=ON \
            --build-arg SHA=${INPUTS_REF} \
            -t ispc-release .
        env:
          INPUTS_REF: ${{ inputs.ref }}

      - name: Extract tarball from container
        run: |
          CONTAINER_ID=$(docker create ispc-release)
          docker cp "$CONTAINER_ID":/usr/local/src/ ./

      - name: Upload artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: ispc_x86_64
          path: src/ispc-*.tar.gz
